@------ANKIT KUMAR
@------2020UCS0118
@------CA LAB PROJECT


@---- conversion of numbers in lpfp format-----
@ num1= 12.1 = 1.1000001100110011 * 2^3 = 0    100000000000011  1000001100110011 = 40028333
@                                         |         |               |
@                                        sign   exponent         mantisa
@                                         |        |               |
@ num2= 1.8  = 1.1100110011001100 * 2^0 = 0    111111111111111  1100110011001100 = 3FFFCCCC 


.section .data


@--------FOR ADDITION---------
num1: .byte 0x33, 0x93, 0x03, 0x40  @-----num1 in lpfp according to question
num2: .byte 0xCC, 0xEC, 0x02, 0x40  @-----num2 in lpfp according to question
signbitnum1: .word 0  @------as per the number taken
signbitnum2: .word 0  @------as per the number taken
bit17: .word 0x10000
result1: .skip 4 @------contains number in lpfp format after operation
@-----------------------------

@--------FOR MULTIPLICATION---
num1mul: .byte 0x66, 0xE2, 0x04, 0x40  @-----num1 in lpfp according to question
num2mul: .byte 0x00, 0x80, 0xFF, 0x3F  @-----num2 in lpfp according to question
signbitnum1mul: .word 0  @------as per the number taken
signbitnum2mul: .word 0  @------as per the number taken
biasexponent: .word 16383
bit:  .word 0x10000
result1mul: .skip 4 @------contains the number after multiplication
@-----------------------------


.section .text
.global _start

@------------------------------
@----FUNCTION OF ADDITION------


@------condition that num1 is always greater than or equal to num2.
@------applicable of number of same sign 

funcAddTWOlpfpnum:
stmfd sp!, {r0-r9, lr}
ldr r9, =num1
ldmia r9, {r0}
ldr r9, =num2
ldmia r9, {r2}

@-----for the exponent of num1
mov r1, r0, LSR #16 
@-----for the exponent of num2
mov r3, r2, LSR #16

@-----for the mantisa of num1
mov r0, r0, LSL #16
@-----for the mantisa of num2
mov r2, r2, LSL #16
                   
@-----to add 1bit to 17th place
ldr r9, =bit17
ldr r9, [r9]
mov r0, r0, LSR #16
mov r2, r2, LSR #16
add r0, r0, r9
add r2, r2, r9

@------done in order to make exponent same
tomakeexpsame:
cmp r1, r3
beq samesign
mov r2, r2, LSR #1
add r3, r3, #1
cmp r1, r3
bne tomakeexpsame


samesign:
@------add both num
adds r0, r0, r2
@------finding the bit at 18th position done in order to normalise the ans 
mov r7, r0, LSR #17

cmp r7, #0b1
bne decsame
@------done to shift decimal toward left and take out the mantisa of ans
mov r0, r0, LSL #15
mov r0, r0, LSR #17
@------decimal shifted towards left then exponent increase by 1
add r3, r3, #1
cmp r7, #0b1
beq end

decsame:
@------if decimal remains at same position
mov r0, r0, LSL #16
mov r0, r0, LSR #16
cmp r7, #0b0
beq end



end:
mov r3, r3, LSL #16
add r0, r0, r3
ldr r8, =result1
stmia r8, {r0} 

FinishFunc_funcAddTWOlpfpnum:
ldmfd sp!, {r0-r9, pc}

@--------------------------------
@--------------------------------
@------Answer Verification
@------ 12.1+1.8= 13.9
@------ 13.9 =1.1011110011001100 * 2^3 = 4002BCCC (in lpfp)
@--------------------------------
@--------------------------------



@------------FUNCTION OF MULTIPLICATION--------
@---work only for +ve powers
@---if sign is same then positive
@---if sign different then negative


funcMULTWOlpfpnum:
stmfd sp!, {r0-r9 , lr}
ldr r9, =num1mul
ldmia r9, {r0}
ldr r9, =num2mul
ldmia r9, {r2}

@-----for the exponent of num1mul
mov r1, r0, LSR #16 @(2^4)
@-----for the exponent of num2mul
mov r3, r2, LSR #16

@-----for the mantisa of num1mul
mov r0, r0, LSL #16
mov r0, r0, LSR #16
@-----for the mantisa of num2mul
mov r2, r2, LSL #16
mov r2, r2, LSR #16


@ value of 16383 stored in r4

ldr r4, =biasexponent
ldr r4, [r4]
@exponent after multiplication
add r5, r1, r3
sub r5, r5, r4  @----exponent after multiplication

ldr r1, =bit
ldr r1, [r1]
add r0, r0, r1
add r2, r2, r1

umull r6, r7, r0, r2
@-----doing this in order to normalize the ans and take out mantisa
mov r6, r6, LSR #17
mov r7, r7, LSL #15
add r6, r6, r7
mov r6, r6, LSL #16
mov r6, r6, LSR #16
@-----add 1 in exponent when shifted the decimal by 1 place in left
add r5, r5, #1
mov r5, r5, LSL #16
add r5, r5, r6


ldr r8, =result1mul
stmia r8, {r5} 

FinishFunc_funcMULTWOlpfpnum:
ldmfd sp!, {r0-r9, pc}

@--------------------------------
@--------------------------------
@------Answer Verification
@------ 12.1*1.8= 21.78
@------ 21.78 =1.0101110001111010 * 2^4 = 40035C7A (in lpfp)
@--------------------------------
@--------------------------------


_start:
bl funcAddTWOlpfpnum
bl funcMULTWOlpfpnum
swi 0x11
